//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace FashionZone.DataLayer.Model
{
    public partial class D_ATTRIBUTE_VALUE
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int AttributeID
        {
            get { return _attributeID; }
            set
            {
                if (_attributeID != value)
                {
                    if (D_ATTRIBUTE != null && D_ATTRIBUTE.ID != value)
                    {
                        D_ATTRIBUTE = null;
                    }
                    _attributeID = value;
                }
            }
        }
        private int _attributeID;
    
        public virtual string Value
        {
            get;
            set;
        }
    
        public virtual int ShowOrder
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual D_ATTRIBUTE D_ATTRIBUTE
        {
            get { return _d_ATTRIBUTE; }
            set
            {
                if (!ReferenceEquals(_d_ATTRIBUTE, value))
                {
                    var previousValue = _d_ATTRIBUTE;
                    _d_ATTRIBUTE = value;
                    FixupD_ATTRIBUTE(previousValue);
                }
            }
        }
        private D_ATTRIBUTE _d_ATTRIBUTE;
    
        public virtual ICollection<PRODUCT_ATTRIBUTE> PRODUCT_ATTRIBUTE
        {
            get
            {
                if (_pRODUCT_ATTRIBUTE == null)
                {
                    var newCollection = new FixupCollection<PRODUCT_ATTRIBUTE>();
                    newCollection.CollectionChanged += FixupPRODUCT_ATTRIBUTE;
                    _pRODUCT_ATTRIBUTE = newCollection;
                }
                return _pRODUCT_ATTRIBUTE;
            }
            set
            {
                if (!ReferenceEquals(_pRODUCT_ATTRIBUTE, value))
                {
                    var previousValue = _pRODUCT_ATTRIBUTE as FixupCollection<PRODUCT_ATTRIBUTE>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPRODUCT_ATTRIBUTE;
                    }
                    _pRODUCT_ATTRIBUTE = value;
                    var newValue = value as FixupCollection<PRODUCT_ATTRIBUTE>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPRODUCT_ATTRIBUTE;
                    }
                }
            }
        }
        private ICollection<PRODUCT_ATTRIBUTE> _pRODUCT_ATTRIBUTE;

        #endregion

        #region Association Fixup
    
        private void FixupD_ATTRIBUTE(D_ATTRIBUTE previousValue)
        {
            if (previousValue != null && previousValue.D_ATTRIBUTE_VALUE.Contains(this))
            {
                previousValue.D_ATTRIBUTE_VALUE.Remove(this);
            }
    
            if (D_ATTRIBUTE != null)
            {
                if (!D_ATTRIBUTE.D_ATTRIBUTE_VALUE.Contains(this))
                {
                    D_ATTRIBUTE.D_ATTRIBUTE_VALUE.Add(this);
                }
                if (AttributeID != D_ATTRIBUTE.ID)
                {
                    AttributeID = D_ATTRIBUTE.ID;
                }
            }
        }
    
        private void FixupPRODUCT_ATTRIBUTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PRODUCT_ATTRIBUTE item in e.NewItems)
                {
                    item.D_ATTRIBUTE_VALUE = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PRODUCT_ATTRIBUTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.D_ATTRIBUTE_VALUE, this))
                    {
                        item.D_ATTRIBUTE_VALUE = null;
                    }
                }
            }
        }

        #endregion

    }
}
