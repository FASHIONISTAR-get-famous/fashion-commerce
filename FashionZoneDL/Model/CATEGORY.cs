//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace FashionZone.DataLayer.Model
{
    public partial class CATEGORY
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CampaignID
        {
            get { return _campaignID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_campaignID != value)
                    {
                        if (CAMPAIGN != null && CAMPAIGN.ID != value)
                        {
                            CAMPAIGN = null;
                        }
                        _campaignID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _campaignID;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ParentID
        {
            get { return _parentID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_parentID != value)
                    {
                        if (CATEGORY2 != null && CATEGORY2.ID != value)
                        {
                            CATEGORY2 = null;
                        }
                        _parentID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _parentID;
    
        public virtual Nullable<int> AttributeID
        {
            get { return _attributeID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_attributeID != value)
                    {
                        if (D_ATTRIBUTE != null && D_ATTRIBUTE.ID != value)
                        {
                            D_ATTRIBUTE = null;
                        }
                        _attributeID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _attributeID;
    
        public virtual Nullable<int> Ordering
        {
            get;
            set;
        }
    
        public virtual string NameEng
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual CAMPAIGN CAMPAIGN
        {
            get { return _cAMPAIGN; }
            set
            {
                if (!ReferenceEquals(_cAMPAIGN, value))
                {
                    var previousValue = _cAMPAIGN;
                    _cAMPAIGN = value;
                    FixupCAMPAIGN(previousValue);
                }
            }
        }
        private CAMPAIGN _cAMPAIGN;
    
        public virtual ICollection<CATEGORY> CATEGORY1
        {
            get
            {
                if (_cATEGORY1 == null)
                {
                    var newCollection = new FixupCollection<CATEGORY>();
                    newCollection.CollectionChanged += FixupCATEGORY1;
                    _cATEGORY1 = newCollection;
                }
                return _cATEGORY1;
            }
            set
            {
                if (!ReferenceEquals(_cATEGORY1, value))
                {
                    var previousValue = _cATEGORY1 as FixupCollection<CATEGORY>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCATEGORY1;
                    }
                    _cATEGORY1 = value;
                    var newValue = value as FixupCollection<CATEGORY>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCATEGORY1;
                    }
                }
            }
        }
        private ICollection<CATEGORY> _cATEGORY1;
    
        public virtual CATEGORY CATEGORY2
        {
            get { return _cATEGORY2; }
            set
            {
                if (!ReferenceEquals(_cATEGORY2, value))
                {
                    var previousValue = _cATEGORY2;
                    _cATEGORY2 = value;
                    FixupCATEGORY2(previousValue);
                }
            }
        }
        private CATEGORY _cATEGORY2;
    
        public virtual D_ATTRIBUTE D_ATTRIBUTE
        {
            get { return _d_ATTRIBUTE; }
            set
            {
                if (!ReferenceEquals(_d_ATTRIBUTE, value))
                {
                    var previousValue = _d_ATTRIBUTE;
                    _d_ATTRIBUTE = value;
                    FixupD_ATTRIBUTE(previousValue);
                }
            }
        }
        private D_ATTRIBUTE _d_ATTRIBUTE;
    
        public virtual ICollection<PRODUCT> PRODUCT
        {
            get
            {
                if (_pRODUCT == null)
                {
                    var newCollection = new FixupCollection<PRODUCT>();
                    newCollection.CollectionChanged += FixupPRODUCT;
                    _pRODUCT = newCollection;
                }
                return _pRODUCT;
            }
            set
            {
                if (!ReferenceEquals(_pRODUCT, value))
                {
                    var previousValue = _pRODUCT as FixupCollection<PRODUCT>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPRODUCT;
                    }
                    _pRODUCT = value;
                    var newValue = value as FixupCollection<PRODUCT>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPRODUCT;
                    }
                }
            }
        }
        private ICollection<PRODUCT> _pRODUCT;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCAMPAIGN(CAMPAIGN previousValue)
        {
            if (previousValue != null && previousValue.CATEGORY.Contains(this))
            {
                previousValue.CATEGORY.Remove(this);
            }
    
            if (CAMPAIGN != null)
            {
                if (!CAMPAIGN.CATEGORY.Contains(this))
                {
                    CAMPAIGN.CATEGORY.Add(this);
                }
                if (CampaignID != CAMPAIGN.ID)
                {
                    CampaignID = CAMPAIGN.ID;
                }
            }
            else if (!_settingFK)
            {
                CampaignID = null;
            }
        }
    
        private void FixupCATEGORY2(CATEGORY previousValue)
        {
            if (previousValue != null && previousValue.CATEGORY1.Contains(this))
            {
                previousValue.CATEGORY1.Remove(this);
            }
    
            if (CATEGORY2 != null)
            {
                if (!CATEGORY2.CATEGORY1.Contains(this))
                {
                    CATEGORY2.CATEGORY1.Add(this);
                }
                if (ParentID != CATEGORY2.ID)
                {
                    ParentID = CATEGORY2.ID;
                }
            }
            else if (!_settingFK)
            {
                ParentID = null;
            }
        }
    
        private void FixupD_ATTRIBUTE(D_ATTRIBUTE previousValue)
        {
            if (previousValue != null && previousValue.CATEGORY.Contains(this))
            {
                previousValue.CATEGORY.Remove(this);
            }
    
            if (D_ATTRIBUTE != null)
            {
                if (!D_ATTRIBUTE.CATEGORY.Contains(this))
                {
                    D_ATTRIBUTE.CATEGORY.Add(this);
                }
                if (AttributeID != D_ATTRIBUTE.ID)
                {
                    AttributeID = D_ATTRIBUTE.ID;
                }
            }
            else if (!_settingFK)
            {
                AttributeID = null;
            }
        }
    
        private void FixupCATEGORY1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CATEGORY item in e.NewItems)
                {
                    item.CATEGORY2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CATEGORY item in e.OldItems)
                {
                    if (ReferenceEquals(item.CATEGORY2, this))
                    {
                        item.CATEGORY2 = null;
                    }
                }
            }
        }
    
        private void FixupPRODUCT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PRODUCT item in e.NewItems)
                {
                    if (!item.CATEGORY.Contains(this))
                    {
                        item.CATEGORY.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PRODUCT item in e.OldItems)
                {
                    if (item.CATEGORY.Contains(this))
                    {
                        item.CATEGORY.Remove(this);
                    }
                }
            }
        }

        #endregion

    }
}
