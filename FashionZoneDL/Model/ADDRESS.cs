//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace FashionZone.DataLayer.Model
{
    public partial class ADDRESS
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int CustomerID
        {
            get { return _customerID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_customerID != value)
                    {
                        if (CUSTOMER != null && CUSTOMER.ID != value)
                        {
                            CUSTOMER = null;
                        }
                        _customerID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _customerID;
    
        public virtual string Address1
        {
            get;
            set;
        }
    
        public virtual Nullable<int> City
        {
            get { return _city; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_city != value)
                    {
                        if (D_CITY != null && D_CITY.ID != value)
                        {
                            D_CITY = null;
                        }
                        _city = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _city;
    
        public virtual string Telephone
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TypeID
        {
            get { return _typeID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_typeID != value)
                    {
                        if (D_ADDRESS_TYPE != null && D_ADDRESS_TYPE.ID != value)
                        {
                            D_ADDRESS_TYPE = null;
                        }
                        _typeID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _typeID;
    
        public virtual string PostCode
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Location
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual D_ADDRESS_TYPE D_ADDRESS_TYPE
        {
            get { return _d_ADDRESS_TYPE; }
            set
            {
                if (!ReferenceEquals(_d_ADDRESS_TYPE, value))
                {
                    var previousValue = _d_ADDRESS_TYPE;
                    _d_ADDRESS_TYPE = value;
                    FixupD_ADDRESS_TYPE(previousValue);
                }
            }
        }
        private D_ADDRESS_TYPE _d_ADDRESS_TYPE;
    
        public virtual D_CITY D_CITY
        {
            get { return _d_CITY; }
            set
            {
                if (!ReferenceEquals(_d_CITY, value))
                {
                    var previousValue = _d_CITY;
                    _d_CITY = value;
                    FixupD_CITY(previousValue);
                }
            }
        }
        private D_CITY _d_CITY;
    
        public virtual CUSTOMER CUSTOMER
        {
            get { return _cUSTOMER; }
            set
            {
                if (!ReferenceEquals(_cUSTOMER, value))
                {
                    var previousValue = _cUSTOMER;
                    _cUSTOMER = value;
                    FixupCUSTOMER(previousValue);
                }
            }
        }
        private CUSTOMER _cUSTOMER;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupD_ADDRESS_TYPE(D_ADDRESS_TYPE previousValue)
        {
            if (D_ADDRESS_TYPE != null)
            {
                if (TypeID != D_ADDRESS_TYPE.ID)
                {
                    TypeID = D_ADDRESS_TYPE.ID;
                }
            }
            else if (!_settingFK)
            {
                TypeID = null;
            }
        }
    
        private void FixupD_CITY(D_CITY previousValue)
        {
            if (D_CITY != null)
            {
                if (City != D_CITY.ID)
                {
                    City = D_CITY.ID;
                }
            }
            else if (!_settingFK)
            {
                City = null;
            }
        }
    
        private void FixupCUSTOMER(CUSTOMER previousValue)
        {
            if (previousValue != null && previousValue.ADDRESS.Contains(this))
            {
                previousValue.ADDRESS.Remove(this);
            }
    
            if (CUSTOMER != null)
            {
                if (!CUSTOMER.ADDRESS.Contains(this))
                {
                    CUSTOMER.ADDRESS.Add(this);
                }
                if (CustomerID != CUSTOMER.ID)
                {
                    CustomerID = CUSTOMER.ID;
                }
            }
        }

        #endregion

    }
}
